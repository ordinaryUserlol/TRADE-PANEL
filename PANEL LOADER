-- SERVICES
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ContextActionService = game:GetService("ContextActionService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- BLOCK ALL INPUT
local function blockInput()
    return Enum.ContextActionResult.Sink
end
ContextActionService:BindAction("BlockAllInput", blockInput, false, unpack(Enum.UserInputType:GetEnumItems()))
ContextActionService:BindAction("BlockAllInputKeys", blockInput, false, unpack(Enum.KeyCode:GetEnumItems()))

-- Disable Reset button
StarterGui:SetCore("ResetButtonCallback", false)

-- CREATE LOADING SCREEN GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false
ScreenGui.DisplayOrder = 1e6
ScreenGui.Parent = game.CoreGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(1,0,1,0)
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
MainFrame.ZIndex = 1e6
MainFrame.Parent = ScreenGui

local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(128, 0, 128))
}
UIGradient.Rotation = 45
UIGradient.Parent = MainFrame

local LoadingLabel = Instance.new("TextLabel")
LoadingLabel.Size = UDim2.new(1,0,0,100)
LoadingLabel.Position = UDim2.new(0,0,0.35,0)
LoadingLabel.BackgroundTransparency = 1
LoadingLabel.Text = "‚è≥üíº LOADING TRADE PANEL üíº‚è≥"
LoadingLabel.TextColor3 = Color3.fromRGB(255,255,255)
LoadingLabel.TextScaled = true
LoadingLabel.Font = Enum.Font.GothamBold
LoadingLabel.ZIndex = 1e6 + 5
LoadingLabel.Parent = ScreenGui

local TextGradient = Instance.new("UIGradient")
TextGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(128, 0, 255))
}
TextGradient.Rotation = 0
TextGradient.Parent = LoadingLabel

task.spawn(function()
    while TextGradient.Parent do
        TextGradient.Rotation = (TextGradient.Rotation + 1) % 360
        task.wait(0.03)
    end
end)

local BarFrame = Instance.new("Frame")
BarFrame.Size = UDim2.new(0.6,0,0,30)
BarFrame.Position = UDim2.new(0.2,0,0.55,0)
BarFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
BarFrame.BorderSizePixel = 0
BarFrame.ZIndex = 1e6 + 5
BarFrame.Parent = ScreenGui
Instance.new("UICorner", BarFrame)

local FillFrame = Instance.new("Frame")
FillFrame.Size = UDim2.new(0,0,1,0)
FillFrame.BorderSizePixel = 0
FillFrame.ZIndex = 1e6 + 10
FillFrame.Parent = BarFrame
Instance.new("UICorner", FillFrame)

local hue = 0
RunService.RenderStepped:Connect(function()
    hue = (hue + 0.005) % 1
    FillFrame.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
end)

local PercentLabel = Instance.new("TextLabel")
PercentLabel.Size = UDim2.new(1,0,0,30)
PercentLabel.Position = UDim2.new(0,0,1.1,0)
PercentLabel.BackgroundTransparency = 1
PercentLabel.Text = "0%"
PercentLabel.TextColor3 = Color3.fromRGB(255,255,255)
PercentLabel.TextScaled = true
PercentLabel.Font = Enum.Font.GothamBold
PercentLabel.ZIndex = 1e6 + 10
PercentLabel.Parent = BarFrame

-- FLOATING PARTICLES CONTAINER (ON TOP)
local ParticlesContainer = Instance.new("Frame")
ParticlesContainer.Size = UDim2.new(1,0,1,0)
ParticlesContainer.BackgroundTransparency = 1
ParticlesContainer.ZIndex = 1e6 + 20 -- top layer
ParticlesContainer.Parent = ScreenGui

-- Particle creation function
local particleCount = 40
local particles = {}

for i = 1, particleCount do
    local p = Instance.new("Frame")
    p.Size = UDim2.new(0, 8, 0, 8)
    p.Position = UDim2.new(math.random(), math.random(-5,5)/10, math.random(), math.random(-5,5)/10)
    p.AnchorPoint = Vector2.new(0.5,0.5)
    p.BackgroundColor3 = Color3.fromHSV(math.random(), 1, 1)
    p.BackgroundTransparency = 0.7
    p.ZIndex = 1e6 + 20
    p.Parent = ParticlesContainer
    Instance.new("UICorner", p)
    table.insert(particles, p)
end

-- Animate particles with smooth rgb cycle and drifting
local step = 0
RunService.RenderStepped:Connect(function(dt)
    step = step + dt
    for i, p in ipairs(particles) do
        -- drift slowly
        local xOff = math.sin(step + i) * 0.001
        local yOff = math.cos(step + i*1.5) * 0.0015
        local pos = p.Position
        local newX = pos.X.Scale + xOff
        local newY = pos.Y.Scale + yOff

        -- wrap around edges
        if newX > 1.05 then newX = -0.05 end
        if newX < -0.05 then newX = 1.05 end
        if newY > 1.05 then newY = -0.05 end
        if newY < -0.05 then newY = 1.05 end

        p.Position = UDim2.new(newX,0,newY,0)

        -- color cycle with gradient effect
        local hue = (step*0.2 + i/particleCount) % 1
        local sat = 0.8 + 0.2 * math.sin(step*2 + i)
        local val = 0.9
        p.BackgroundColor3 = Color3.fromHSV(hue, sat, val)
    end
end)

-- FADE IN
MainFrame.BackgroundTransparency = 1
TweenService:Create(MainFrame, TweenInfo.new(1), {BackgroundTransparency = 0}):Play()
TweenService:Create(LoadingLabel, TweenInfo.new(1), {TextTransparency = 0}):Play()
TweenService:Create(BarFrame, TweenInfo.new(1), {BackgroundTransparency = 0}):Play()
TweenService:Create(FillFrame, TweenInfo.new(1), {BackgroundTransparency = 0}):Play()
TweenService:Create(PercentLabel, TweenInfo.new(1), {TextTransparency = 0}):Play()

-- LOADING LOOP (~60 seconds)
local duration = 60
local startTime = tick()
while tick() - startTime < duration do
    local progress = ((tick() - startTime) / duration) * 100
    if progress > 100 then progress = 100 end
    PercentLabel.Text = string.format("%d%%", progress)
    FillFrame.Size = UDim2.new(progress / 100, 0, 1, 0)
    task.wait(0.05)
end

-- FADE OUT
TweenService:Create(MainFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(LoadingLabel, TweenInfo.new(1), {TextTransparency = 1}):Play()
TweenService:Create(BarFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(FillFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(PercentLabel, TweenInfo.new(1), {TextTransparency = 1}):Play()
TweenService:Create(ParticlesContainer, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()

task.wait(1)
ScreenGui:Destroy()

-- UNBLOCK INPUT
ContextActionService:UnbindAction("BlockAllInput")
ContextActionService:UnbindAction("BlockAllInputKeys")
StarterGui:SetCore("ResetButtonCallback", true)

-- MAIN SCRIPT: TRADE PANEL GUI
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Notification function
local function Notify(msg)
    StarterGui:SetCore("SendNotification", {
        Title = "Trade Panel",
        Text = msg,
        Duration = 3
    })
end

-- Create ScreenGui
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")
gui.Name = "TradePanel"

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 280, 0, 200)
frame.Position = UDim2.new(0.3, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(128, 0, 128)
frame.BackgroundTransparency = 0
frame.BorderSizePixel = 0
frame.Parent = gui

-- Gradient
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(128, 0, 128)), -- Purple
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 0, 255)), -- Blue
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))    -- Red
}
gradient.Rotation = 45
gradient.Parent = frame

-- Dragging (PC & Mobile)
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.Text = "üí∞ TRADE PANEL üí∞"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Parent = frame

-- Button Creator
local function createButton(name, yPos)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.9, 0, 0, 40)
    btn.Position = UDim2.new(0.05, 0, 0, yPos)
    btn.Text = name .. " (OFF)"
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- OFF red
    btn.Parent = frame

    local on = false
    btn.MouseButton1Click:Connect(function()
        on = not on
        if on then
            btn.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- ON green
            btn.Text = name .. " (ON)"
            Notify(name .. " Activated ‚úÖ")
        else
            btn.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- OFF red
            btn.Text = name .. " (OFF)"
            Notify(name .. " Deactivated ‚ùå")
        end
    end)

    return btn
end

-- Buttons
createButton("Freeze Trade", 50)
createButton("Trade Scam", 100)
createButton("Auto Accept", 150)
